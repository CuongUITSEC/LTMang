<UserControl x:Class="Learnify.Views.PomodoroView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Learnify.Views"
             xmlns:vm="clr-namespace:Learnify.ViewModels"
             xmlns:userControls="clr-namespace:Learnify.Views.UserControls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

             mc:Ignorable="d"
        d:DesignHeight="600"
        d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                StrokeDashArray="1 2"
                                Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                SnapsToDevicePixels="true"
                                StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background"
                Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border"
                Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background"
                Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border"
                Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background"
                Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border"
                Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background"
                Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border"
                Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                Color="#FF838383"/>
        <Style x:Key="Start-btn"
                TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Center"/>
            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
            <Setter Property="Padding"
                    Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                CornerRadius="50"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                    Focusable="False"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted"
                                    Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                    Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#C2384A"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed"
                                    Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#C2384A"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                    Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#C2384A"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent"/>
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                StrokeDashArray="1 2"
                                Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                SnapsToDevicePixels="true"
                                StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1"
                Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1"
                Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1"
                Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1"
                Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1"
                Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1"
                Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1"
                Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1"
                Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1"
                Color="#FF838383"/>
        <Style x:Key="Stop-btn"
                TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Center"/>
            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
            <Setter Property="Padding"
                    Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                CornerRadius="50"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                    Focusable="False"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted"
                                    Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                    Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#659FB9"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed"
                                    Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#659FB9"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                    Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#659FB9"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="Transparent"/>
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="toggle-btn" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" CornerRadius="30" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>-->
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>-->
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

            <DataTemplate DataType="{x:Type vm:PomodoroModeViewModel}">
            <userControls:PomodoroModeView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:TimerModeViewModel}">
            <userControls:TimerModeView />
            </DataTemplate>

    </UserControl.Resources>

    <UserControl.DataContext>
        <vm:PomodoroViewModel/>
    </UserControl.DataContext>
    
    

    <Grid Background="#DFF3FF">
        
       

        <StackPanel   HorizontalAlignment="Center"
                VerticalAlignment="Top" >

            <ToggleButton Style="{DynamicResource toggle-btn}" Height="60" Width="190" Background="#B2B0B0" Margin="10">
                <Grid Height="60" Width="190">
                    <DockPanel Height="70" VerticalAlignment="Center">
                        <Border x:Name="boder1" Height="55" Width="70" VerticalAlignment="Center" Background="White" CornerRadius="30" DockPanel.Dock="Left" HorizontalAlignment="Left" Margin="10,0,0,3"></Border>
                    </DockPanel>

                    <DockPanel  Height="60" Width="150" HorizontalAlignment="Center" Margin="15,-2,15,2" >
                        <ToggleButton Command="{Binding PomodoroModeCommand}" BorderBrush="Transparent" Style="{DynamicResource ToggleButtonStyle1}" x:Name="TimerMode" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Center" >
                            <ToggleButton.Background>
                                <ImageBrush ImageSource="/Images/timer 1.png"/>
                            </ToggleButton.Background>
                        </ToggleButton>
                        <ToggleButton Command="{Binding TimerModeCommand}" BorderBrush="Transparent" Style="{DynamicResource ToggleButtonStyle1}" x:Name="PomoMode" Width="50" Height="50" HorizontalAlignment="Right" VerticalAlignment="Center" Click="Button_Click" >
                            <ToggleButton.Background>
                                <ImageBrush ImageSource="/Images/pomodoro-technique 1 (1).png"/>
                            </ToggleButton.Background>
                        </ToggleButton>
                    </DockPanel>
                </Grid>
            </ToggleButton>



            <!-- Vòng tròn và thời gian -->
            <Grid Width="600"
                    Height="600">

                <ContentControl Content="{Binding CurrentMode}" Grid.Row="3"/>

                
            </Grid>

            
        </StackPanel>
    </Grid>
</UserControl>